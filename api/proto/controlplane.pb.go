// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: api/proto/controlplane.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkMode int32

const (
	NetworkMode_NETWORK_MODE_UNSPECIFIED NetworkMode = 0 // Defaults to HOST
	NetworkMode_NETWORK_MODE_HOST        NetworkMode = 1
	NetworkMode_NETWORK_MODE_BRIDGE      NetworkMode = 2
)

// Enum value maps for NetworkMode.
var (
	NetworkMode_name = map[int32]string{
		0: "NETWORK_MODE_UNSPECIFIED",
		1: "NETWORK_MODE_HOST",
		2: "NETWORK_MODE_BRIDGE",
	}
	NetworkMode_value = map[string]int32{
		"NETWORK_MODE_UNSPECIFIED": 0,
		"NETWORK_MODE_HOST":        1,
		"NETWORK_MODE_BRIDGE":      2,
	}
)

func (x NetworkMode) Enum() *NetworkMode {
	p := new(NetworkMode)
	*p = x
	return p
}

func (x NetworkMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkMode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_controlplane_proto_enumTypes[0].Descriptor()
}

func (NetworkMode) Type() protoreflect.EnumType {
	return &file_api_proto_controlplane_proto_enumTypes[0]
}

func (x NetworkMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkMode.Descriptor instead.
func (NetworkMode) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{0}
}

type HealthStatus int32

const (
	HealthStatus_UNKNOWN         HealthStatus = 0
	HealthStatus_SERVING         HealthStatus = 1
	HealthStatus_NOT_SERVING     HealthStatus = 2
	HealthStatus_SERVICE_UNKNOWN HealthStatus = 3
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
		3: "SERVICE_UNKNOWN",
	}
	HealthStatus_value = map[string]int32{
		"UNKNOWN":         0,
		"SERVING":         1,
		"NOT_SERVING":     2,
		"SERVICE_UNKNOWN": 3,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_controlplane_proto_enumTypes[1].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_api_proto_controlplane_proto_enumTypes[1]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus.Descriptor instead.
func (HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{1}
}

type TraefikConfig struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Enable              bool                   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Host                string                 `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Entrypoint          string                 `protobuf:"bytes,3,opt,name=entrypoint,proto3" json:"entrypoint,omitempty"`
	EnableSsl           bool                   `protobuf:"varint,4,opt,name=enable_ssl,json=enableSsl,proto3" json:"enable_ssl,omitempty"`
	SslHost             string                 `protobuf:"bytes,5,opt,name=ssl_host,json=sslHost,proto3" json:"ssl_host,omitempty"`
	CertResolver        string                 `protobuf:"bytes,6,opt,name=cert_resolver,json=certResolver,proto3" json:"cert_resolver,omitempty"`
	HealthCheckPath     string                 `protobuf:"bytes,7,opt,name=health_check_path,json=healthCheckPath,proto3" json:"health_check_path,omitempty"`
	HealthCheckInterval string                 `protobuf:"bytes,8,opt,name=health_check_interval,json=healthCheckInterval,proto3" json:"health_check_interval,omitempty"`
	PathPrefix          string                 `protobuf:"bytes,9,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	Middlewares         []string               `protobuf:"bytes,10,rep,name=middlewares,proto3" json:"middlewares,omitempty"`
	CustomLabels        map[string]string      `protobuf:"bytes,11,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TraefikConfig) Reset() {
	*x = TraefikConfig{}
	mi := &file_api_proto_controlplane_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraefikConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraefikConfig) ProtoMessage() {}

func (x *TraefikConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraefikConfig.ProtoReflect.Descriptor instead.
func (*TraefikConfig) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{0}
}

func (x *TraefikConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *TraefikConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TraefikConfig) GetEntrypoint() string {
	if x != nil {
		return x.Entrypoint
	}
	return ""
}

func (x *TraefikConfig) GetEnableSsl() bool {
	if x != nil {
		return x.EnableSsl
	}
	return false
}

func (x *TraefikConfig) GetSslHost() string {
	if x != nil {
		return x.SslHost
	}
	return ""
}

func (x *TraefikConfig) GetCertResolver() string {
	if x != nil {
		return x.CertResolver
	}
	return ""
}

func (x *TraefikConfig) GetHealthCheckPath() string {
	if x != nil {
		return x.HealthCheckPath
	}
	return ""
}

func (x *TraefikConfig) GetHealthCheckInterval() string {
	if x != nil {
		return x.HealthCheckInterval
	}
	return ""
}

func (x *TraefikConfig) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *TraefikConfig) GetMiddlewares() []string {
	if x != nil {
		return x.Middlewares
	}
	return nil
}

func (x *TraefikConfig) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

type DeployRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image         string                 `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Replicas      int32                  `protobuf:"varint,3,opt,name=replicas,proto3" json:"replicas,omitempty"`
	Cpu           float64                `protobuf:"fixed64,4,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        int64                  `protobuf:"varint,5,opt,name=memory,proto3" json:"memory,omitempty"`
	Region        string                 `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Traefik       *TraefikConfig         `protobuf:"bytes,8,opt,name=traefik,proto3" json:"traefik,omitempty"`
	NetworkMode   NetworkMode            `protobuf:"varint,9,opt,name=network_mode,json=networkMode,proto3,enum=controlplane.NetworkMode" json:"network_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployRequest) Reset() {
	*x = DeployRequest{}
	mi := &file_api_proto_controlplane_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployRequest) ProtoMessage() {}

func (x *DeployRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployRequest.ProtoReflect.Descriptor instead.
func (*DeployRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{1}
}

func (x *DeployRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeployRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *DeployRequest) GetReplicas() int32 {
	if x != nil {
		return x.Replicas
	}
	return 0
}

func (x *DeployRequest) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *DeployRequest) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *DeployRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DeployRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *DeployRequest) GetTraefik() *TraefikConfig {
	if x != nil {
		return x.Traefik
	}
	return nil
}

func (x *DeployRequest) GetNetworkMode() NetworkMode {
	if x != nil {
		return x.NetworkMode
	}
	return NetworkMode_NETWORK_MODE_UNSPECIFIED
}

type DeployResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeployResponse) Reset() {
	*x = DeployResponse{}
	mi := &file_api_proto_controlplane_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeployResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployResponse) ProtoMessage() {}

func (x *DeployResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployResponse.ProtoReflect.Descriptor instead.
func (*DeployResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{2}
}

func (x *DeployResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DeployResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DeployResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	ContainerId   string                 `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_api_proto_controlplane_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DeleteRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

type DeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_api_proto_controlplane_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_api_proto_controlplane_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{5}
}

func (x *StatusRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type AllocationStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AllocationId  string                 `protobuf:"bytes,1,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeName      string                 `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	DesiredStatus string                 `protobuf:"bytes,5,opt,name=desired_status,json=desiredStatus,proto3" json:"desired_status,omitempty"`
	CreateTime    int64                  `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ModifyTime    int64                  `protobuf:"varint,7,opt,name=modify_time,json=modifyTime,proto3" json:"modify_time,omitempty"`
	TaskStates    map[string]string      `protobuf:"bytes,8,rep,name=task_states,json=taskStates,proto3" json:"task_states,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllocationStatus) Reset() {
	*x = AllocationStatus{}
	mi := &file_api_proto_controlplane_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllocationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocationStatus) ProtoMessage() {}

func (x *AllocationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocationStatus.ProtoReflect.Descriptor instead.
func (*AllocationStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{6}
}

func (x *AllocationStatus) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

func (x *AllocationStatus) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *AllocationStatus) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *AllocationStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AllocationStatus) GetDesiredStatus() string {
	if x != nil {
		return x.DesiredStatus
	}
	return ""
}

func (x *AllocationStatus) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *AllocationStatus) GetModifyTime() int64 {
	if x != nil {
		return x.ModifyTime
	}
	return 0
}

func (x *AllocationStatus) GetTaskStates() map[string]string {
	if x != nil {
		return x.TaskStates
	}
	return nil
}

type StatusResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId     string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	JobStatus        string                 `protobuf:"bytes,2,opt,name=job_status,json=jobStatus,proto3" json:"job_status,omitempty"`
	JobType          string                 `protobuf:"bytes,3,opt,name=job_type,json=jobType,proto3" json:"job_type,omitempty"`
	DesiredInstances int32                  `protobuf:"varint,4,opt,name=desired_instances,json=desiredInstances,proto3" json:"desired_instances,omitempty"`
	RunningInstances int32                  `protobuf:"varint,5,opt,name=running_instances,json=runningInstances,proto3" json:"running_instances,omitempty"`
	Allocations      []*AllocationStatus    `protobuf:"bytes,6,rep,name=allocations,proto3" json:"allocations,omitempty"`
	Message          string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_api_proto_controlplane_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{7}
}

func (x *StatusResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *StatusResponse) GetJobStatus() string {
	if x != nil {
		return x.JobStatus
	}
	return ""
}

func (x *StatusResponse) GetJobType() string {
	if x != nil {
		return x.JobType
	}
	return ""
}

func (x *StatusResponse) GetDesiredInstances() int32 {
	if x != nil {
		return x.DesiredInstances
	}
	return 0
}

func (x *StatusResponse) GetRunningInstances() int32 {
	if x != nil {
		return x.RunningInstances
	}
	return 0
}

func (x *StatusResponse) GetAllocations() []*AllocationStatus {
	if x != nil {
		return x.Allocations
	}
	return nil
}

func (x *StatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeploymentId  string                 `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	AllocationId  string                 `protobuf:"bytes,2,opt,name=allocation_id,json=allocationId,proto3" json:"allocation_id,omitempty"`
	TaskName      string                 `protobuf:"bytes,3,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	Follow        bool                   `protobuf:"varint,4,opt,name=follow,proto3" json:"follow,omitempty"`
	TailLines     int32                  `protobuf:"varint,5,opt,name=tail_lines,json=tailLines,proto3" json:"tail_lines,omitempty"`
	LogType       string                 `protobuf:"bytes,6,opt,name=log_type,json=logType,proto3" json:"log_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogsRequest) Reset() {
	*x = LogsRequest{}
	mi := &file_api_proto_controlplane_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsRequest) ProtoMessage() {}

func (x *LogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsRequest.ProtoReflect.Descriptor instead.
func (*LogsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{8}
}

func (x *LogsRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *LogsRequest) GetAllocationId() string {
	if x != nil {
		return x.AllocationId
	}
	return ""
}

func (x *LogsRequest) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

func (x *LogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *LogsRequest) GetTailLines() int32 {
	if x != nil {
		return x.TailLines
	}
	return 0
}

func (x *LogsRequest) GetLogType() string {
	if x != nil {
		return x.LogType
	}
	return ""
}

type LogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogLines      []string               `protobuf:"bytes,1,rep,name=log_lines,json=logLines,proto3" json:"log_lines,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogsResponse) Reset() {
	*x = LogsResponse{}
	mi := &file_api_proto_controlplane_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsResponse) ProtoMessage() {}

func (x *LogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsResponse.ProtoReflect.Descriptor instead.
func (*LogsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{9}
}

func (x *LogsResponse) GetLogLines() []string {
	if x != nil {
		return x.LogLines
	}
	return nil
}

func (x *LogsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_api_proto_controlplane_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{10}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        HealthStatus           `protobuf:"varint,1,opt,name=status,proto3,enum=controlplane.HealthStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_api_proto_controlplane_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_controlplane_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_controlplane_proto_rawDescGZIP(), []int{11}
}

func (x *HealthCheckResponse) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_UNKNOWN
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_api_proto_controlplane_proto protoreflect.FileDescriptor

const file_api_proto_controlplane_proto_rawDesc = "" +
	"\n" +
	"\x1capi/proto/controlplane.proto\x12\fcontrolplane\"\xf2\x03\n" +
	"\rTraefikConfig\x12\x16\n" +
	"\x06enable\x18\x01 \x01(\bR\x06enable\x12\x12\n" +
	"\x04host\x18\x02 \x01(\tR\x04host\x12\x1e\n" +
	"\n" +
	"entrypoint\x18\x03 \x01(\tR\n" +
	"entrypoint\x12\x1d\n" +
	"\n" +
	"enable_ssl\x18\x04 \x01(\bR\tenableSsl\x12\x19\n" +
	"\bssl_host\x18\x05 \x01(\tR\asslHost\x12#\n" +
	"\rcert_resolver\x18\x06 \x01(\tR\fcertResolver\x12*\n" +
	"\x11health_check_path\x18\a \x01(\tR\x0fhealthCheckPath\x122\n" +
	"\x15health_check_interval\x18\b \x01(\tR\x13healthCheckInterval\x12\x1f\n" +
	"\vpath_prefix\x18\t \x01(\tR\n" +
	"pathPrefix\x12 \n" +
	"\vmiddlewares\x18\n" +
	" \x03(\tR\vmiddlewares\x12R\n" +
	"\rcustom_labels\x18\v \x03(\v2-.controlplane.TraefikConfig.CustomLabelsEntryR\fcustomLabels\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x88\x03\n" +
	"\rDeployRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x02 \x01(\tR\x05image\x12\x1a\n" +
	"\breplicas\x18\x03 \x01(\x05R\breplicas\x12\x10\n" +
	"\x03cpu\x18\x04 \x01(\x01R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x05 \x01(\x03R\x06memory\x12\x16\n" +
	"\x06region\x18\x06 \x01(\tR\x06region\x12?\n" +
	"\x06labels\x18\a \x03(\v2'.controlplane.DeployRequest.LabelsEntryR\x06labels\x125\n" +
	"\atraefik\x18\b \x01(\v2\x1b.controlplane.TraefikConfigR\atraefik\x12<\n" +
	"\fnetwork_mode\x18\t \x01(\x0e2\x19.controlplane.NetworkModeR\vnetworkMode\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"g\n" +
	"\x0eDeployResponse\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"W\n" +
	"\rDeleteRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\tR\vcontainerId\"D\n" +
	"\x0eDeleteResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"4\n" +
	"\rStatusRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\"\xfe\x02\n" +
	"\x10AllocationStatus\x12#\n" +
	"\rallocation_id\x18\x01 \x01(\tR\fallocationId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tnode_name\x18\x03 \x01(\tR\bnodeName\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12%\n" +
	"\x0edesired_status\x18\x05 \x01(\tR\rdesiredStatus\x12\x1f\n" +
	"\vcreate_time\x18\x06 \x01(\x03R\n" +
	"createTime\x12\x1f\n" +
	"\vmodify_time\x18\a \x01(\x03R\n" +
	"modifyTime\x12O\n" +
	"\vtask_states\x18\b \x03(\v2..controlplane.AllocationStatus.TaskStatesEntryR\n" +
	"taskStates\x1a=\n" +
	"\x0fTaskStatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa5\x02\n" +
	"\x0eStatusResponse\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12\x1d\n" +
	"\n" +
	"job_status\x18\x02 \x01(\tR\tjobStatus\x12\x19\n" +
	"\bjob_type\x18\x03 \x01(\tR\ajobType\x12+\n" +
	"\x11desired_instances\x18\x04 \x01(\x05R\x10desiredInstances\x12+\n" +
	"\x11running_instances\x18\x05 \x01(\x05R\x10runningInstances\x12@\n" +
	"\vallocations\x18\x06 \x03(\v2\x1e.controlplane.AllocationStatusR\vallocations\x12\x18\n" +
	"\amessage\x18\a \x01(\tR\amessage\"\xc6\x01\n" +
	"\vLogsRequest\x12#\n" +
	"\rdeployment_id\x18\x01 \x01(\tR\fdeploymentId\x12#\n" +
	"\rallocation_id\x18\x02 \x01(\tR\fallocationId\x12\x1b\n" +
	"\ttask_name\x18\x03 \x01(\tR\btaskName\x12\x16\n" +
	"\x06follow\x18\x04 \x01(\bR\x06follow\x12\x1d\n" +
	"\n" +
	"tail_lines\x18\x05 \x01(\x05R\ttailLines\x12\x19\n" +
	"\blog_type\x18\x06 \x01(\tR\alogType\"_\n" +
	"\fLogsResponse\x12\x1b\n" +
	"\tlog_lines\x18\x01 \x03(\tR\blogLines\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\x81\x01\n" +
	"\x13HealthCheckResponse\x122\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1a.controlplane.HealthStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp*[\n" +
	"\vNetworkMode\x12\x1c\n" +
	"\x18NETWORK_MODE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11NETWORK_MODE_HOST\x10\x01\x12\x17\n" +
	"\x13NETWORK_MODE_BRIDGE\x10\x02*N\n" +
	"\fHealthStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x02\x12\x13\n" +
	"\x0fSERVICE_UNKNOWN\x10\x032\xa2\x03\n" +
	"\fControlPlane\x12N\n" +
	"\x11DeployApplication\x12\x1b.controlplane.DeployRequest\x1a\x1c.controlplane.DeployResponse\x12N\n" +
	"\x11DeleteApplication\x12\x1b.controlplane.DeleteRequest\x1a\x1c.controlplane.DeleteResponse\x12Q\n" +
	"\x14GetApplicationStatus\x12\x1b.controlplane.StatusRequest\x1a\x1c.controlplane.StatusResponse\x12K\n" +
	"\x12GetApplicationLogs\x12\x19.controlplane.LogsRequest\x1a\x1a.controlplane.LogsResponse\x12R\n" +
	"\vHealthCheck\x12 .controlplane.HealthCheckRequest\x1a!.controlplane.HealthCheckResponseB0Z.github.com/iuliansafta/control-plane/api/protob\x06proto3"

var (
	file_api_proto_controlplane_proto_rawDescOnce sync.Once
	file_api_proto_controlplane_proto_rawDescData []byte
)

func file_api_proto_controlplane_proto_rawDescGZIP() []byte {
	file_api_proto_controlplane_proto_rawDescOnce.Do(func() {
		file_api_proto_controlplane_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_controlplane_proto_rawDesc), len(file_api_proto_controlplane_proto_rawDesc)))
	})
	return file_api_proto_controlplane_proto_rawDescData
}

var file_api_proto_controlplane_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_proto_controlplane_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_proto_controlplane_proto_goTypes = []any{
	(NetworkMode)(0),            // 0: controlplane.NetworkMode
	(HealthStatus)(0),           // 1: controlplane.HealthStatus
	(*TraefikConfig)(nil),       // 2: controlplane.TraefikConfig
	(*DeployRequest)(nil),       // 3: controlplane.DeployRequest
	(*DeployResponse)(nil),      // 4: controlplane.DeployResponse
	(*DeleteRequest)(nil),       // 5: controlplane.DeleteRequest
	(*DeleteResponse)(nil),      // 6: controlplane.DeleteResponse
	(*StatusRequest)(nil),       // 7: controlplane.StatusRequest
	(*AllocationStatus)(nil),    // 8: controlplane.AllocationStatus
	(*StatusResponse)(nil),      // 9: controlplane.StatusResponse
	(*LogsRequest)(nil),         // 10: controlplane.LogsRequest
	(*LogsResponse)(nil),        // 11: controlplane.LogsResponse
	(*HealthCheckRequest)(nil),  // 12: controlplane.HealthCheckRequest
	(*HealthCheckResponse)(nil), // 13: controlplane.HealthCheckResponse
	nil,                         // 14: controlplane.TraefikConfig.CustomLabelsEntry
	nil,                         // 15: controlplane.DeployRequest.LabelsEntry
	nil,                         // 16: controlplane.AllocationStatus.TaskStatesEntry
}
var file_api_proto_controlplane_proto_depIdxs = []int32{
	14, // 0: controlplane.TraefikConfig.custom_labels:type_name -> controlplane.TraefikConfig.CustomLabelsEntry
	15, // 1: controlplane.DeployRequest.labels:type_name -> controlplane.DeployRequest.LabelsEntry
	2,  // 2: controlplane.DeployRequest.traefik:type_name -> controlplane.TraefikConfig
	0,  // 3: controlplane.DeployRequest.network_mode:type_name -> controlplane.NetworkMode
	16, // 4: controlplane.AllocationStatus.task_states:type_name -> controlplane.AllocationStatus.TaskStatesEntry
	8,  // 5: controlplane.StatusResponse.allocations:type_name -> controlplane.AllocationStatus
	1,  // 6: controlplane.HealthCheckResponse.status:type_name -> controlplane.HealthStatus
	3,  // 7: controlplane.ControlPlane.DeployApplication:input_type -> controlplane.DeployRequest
	5,  // 8: controlplane.ControlPlane.DeleteApplication:input_type -> controlplane.DeleteRequest
	7,  // 9: controlplane.ControlPlane.GetApplicationStatus:input_type -> controlplane.StatusRequest
	10, // 10: controlplane.ControlPlane.GetApplicationLogs:input_type -> controlplane.LogsRequest
	12, // 11: controlplane.ControlPlane.HealthCheck:input_type -> controlplane.HealthCheckRequest
	4,  // 12: controlplane.ControlPlane.DeployApplication:output_type -> controlplane.DeployResponse
	6,  // 13: controlplane.ControlPlane.DeleteApplication:output_type -> controlplane.DeleteResponse
	9,  // 14: controlplane.ControlPlane.GetApplicationStatus:output_type -> controlplane.StatusResponse
	11, // 15: controlplane.ControlPlane.GetApplicationLogs:output_type -> controlplane.LogsResponse
	13, // 16: controlplane.ControlPlane.HealthCheck:output_type -> controlplane.HealthCheckResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_proto_controlplane_proto_init() }
func file_api_proto_controlplane_proto_init() {
	if File_api_proto_controlplane_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_controlplane_proto_rawDesc), len(file_api_proto_controlplane_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_controlplane_proto_goTypes,
		DependencyIndexes: file_api_proto_controlplane_proto_depIdxs,
		EnumInfos:         file_api_proto_controlplane_proto_enumTypes,
		MessageInfos:      file_api_proto_controlplane_proto_msgTypes,
	}.Build()
	File_api_proto_controlplane_proto = out.File
	file_api_proto_controlplane_proto_goTypes = nil
	file_api_proto_controlplane_proto_depIdxs = nil
}
